---
- name: Check if database schema exists
  shell: PGPASSWORD={{ db_master_password }} psql -t -h {{ rds_host }} -U {{ db_master_user }}  -d {{ db_name }} -c "SELECT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = '{{ db_schema_name }}');"
  register: check_schema
  changed_when: "'f' in '{{ check_schema.stdout }}'"
  #delegate_to: "{{ ansible_management_host }}"

- block:
  - name: Create database schema
    shell: PGPASSWORD={{ db_master_password }} psql -t -h {{ rds_host }} -U {{ db_master_user }}  -d {{ db_name }} -c "CREATE SCHEMA {{ db_schema_name }}; ALTER USER {{ db_user }} SET search_path TO {{ db_schema_name }}, public;"
  - name: Grant access to schema
    postgresql_privs: host={{ rds_host }} login={{ db_master_user }} password={{ db_master_password }} database={{ db_name }} type=schema objs={{ db_schema_name }} roles={{ db_user }} privs=ALL
  - name: Create tmp directory
    shell: mktemp -d /tmp/riksdagens_data.XXXXXX
    register: tmp_dir
  - name: Copy tables DDL to remote host
    copy: src={{ role_path }}/files/db_schema.sql dest={{ tmp_dir.stdout }}
  - name: Apply DDL
    shell: cat {{ tmp_dir.stdout}}/db_schema.sql | PGPASSWORD={{ db_password }} psql -h {{ rds_host }} -U {{ db_user }}  -d {{ db_name }}
  - name: Cleanup temp data
    file: path={{ tmp_dir.stdout }} state=absent
  when: check_schema.changed
